1 'ﾛﾍSdｸﾍEｫ^Rｫp4ｬdｫﾅｷ0IHﾉGｫ^Vﾀ9ｸﾂ0R]p2P>\aK<7a0186S:0Cta\0ﾆS4ﾈCJ03NｫwCaｬpｬｻ0ｭpIｸﾄｼ0O@Vﾐ3I<gP0CﾋﾘﾇfIﾅv3ﾗsﾘmgPｯ8`1P1ｻ<L0s@pｵﾁﾈxF_ﾕﾗ0vﾝ2007h@00o1003L8000
2 O=#C04:I=0:K=0:M=128
3 S=I%8:A=PEEK(O+I):A=A-(1+(A>#AA))*#30:IFSV=A>>(7-S)|C:POKE#700+K,V:K=K+1
4 C=(A&(#7F>>S))<<(S+1):I=I+1:IFK<MGOTO3
5 LET[0],#26A7,#56A7,#637B,#5267,#26AB,#5967,#237B,#5637,#26A3,#567B,#A37B,#1567,#267B,#96A7,#267B,#96A7,#6A37,#1267,#6A37,#1267,#37BF,#89AB,#37BF,#89AB,#6A7B,#6A7B,#6A7B,#6A7B
6 T=60:CLS:FORI=0TO21:LC9,I:?"Ə":LC20,I:?"Ə":NEXT:COPY#BAA,#BA9,10
7 X=14:Y=0:B=RND(7):R=0:IFSCR(15,2)END
8 W=248:GSB13
9 H=0:S=0:IFBTN(31)||TICK()>TCLT:V=1:ELSEV=0:H=BTN(29)-BTN(28):S=BTN(32):IFH|S^U=0CONT
10 U=S:W=0:GSB13:I=R:X=X+H:Y=Y+V:R=(R+S)%4:W=-1:GSB13:IF!ZGOTO8
11 X=X-H:Y=Y-V:R=I:IF!VGOTO8
12 W=2:GSB13:FORJ=YTOY+3:L=0:FORI=10TO19:L=L+(SCR(I,J)>0):NEXT:COPY#91F+J*32,#91F+(J-(L=10))*32,-J*32:NEXT:GOTO7
13 Z=USR(#700,W):RTN



'
7 新規ブロックの生成
8 ブロックの描画
9 移動入力のチェック：時間経過あるいはカーソル下で下、でなければカーソル左右とスペースで回転。もし入力がなければこのループを無限に繰り返す
10 現在のブロックを消去。移動先の座標を計算して衝突判定。衝突していなければ8に戻って新しい位置にブロックを描画する
11 衝突したため移動は行わないのでX/Y/Rを元の値に戻す。下方向の入力でなければ元の位置にブロックを書き直すために8に戻る。
12 石化ブロックを描画。ライン消しのチェック。Yの位置から下にスキャンしていき、全部埋まっている行は1つ上の行というかVRAMを丸ごとコピーする。新規ブロック7に戻る
13 描画サブルーチン。X,Y,Rの位置に、キャラWを描画する


変数
X:  ブロックエリア（4x4）左上のX座標
Y:  ブロックエリア（4x4）左上のY座標
B:  ブロックの種類（0〜7）
R:  現在の回転方向（0〜3）
H:  水平方向移動量
V:  垂直方向移動量
S:  回転ボタンの押し下げ状態
U:  直前の回転ボタンの状態の保護
W:  表示するキャラクターパターン（248:ブロック、0:消去）
T:  1段降下するまでのタイマー値（初期値60=1秒）
Z:  USR関数戻り値

