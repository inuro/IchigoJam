1 '000@08030100X0<0ｳyｴﾕcﾍvﾇYZﾄﾆjﾅﾖSKｵｴbcﾍ\ﾛｱｹﾂｷｹJｯFmyｴﾙaｽｴﾇ9=ﾍVhzﾞgｵﾂgﾓm^BﾛeNﾍWｻYﾖﾊ
2 'ﾛﾍSdｸﾍEｫ^Rｫp4ｬdｫﾅｷ0IHﾉGｫ^Vﾀ9ｸﾂ0R]p2P>\aK<7a0186S:0Cta\0ﾆS4ﾈCJ03NｫwCaｬpｬｻ0ｭpIｸﾄｼ0O@Vﾐ3I<gP0CﾋﾘﾇfIﾅv3ﾗsﾘmgPｯ8`1P1ｻ<L0s@pｵﾁﾈxF_ﾕﾗ0vﾝ2007h@00o1003L8000
3 O=#C04:I=0:D=#800
4 S=I%8:A=PEEK(O+I):A=A-(1+(A>#AA))*#30:IFSV=A>>(7-S)|C:POKED,V:D=D+1:IFD=#846O=#C5A:I=0:GOTO4
5 C=(A&(#7F>>S))<<(S+1):I=I+1:IFD<#8C6GOTO4
6 T=60:A=0:GSB99:CLS:FORI=0TO21:LC9,I:?"Ə":LC20,I:?"Ə":NEXT:COPY#BAA,#BA9,10
7 X=14:Y=0:B=[A]:R=0:IFSCR(15,2)ENDELSEA=(A+1)%7:IF!AGSB99
8 LC17,23:?"NEXT:";[A];
9 W=248:GSB13
10 H=0:S=0:IFBTN(31)||TICK()>TCLT:V=1:ELSEV=0:H=BTN(29)-BTN(28):S=BTN(32):IFH|S^U=0CONT
11 U=S:W=0:GSB13:I=R:X=X+H:Y=Y+V:R=(R+S)%4:W=-1:GSB13:IF!ZGOTO9
12 X=X-H:Y=Y-V:R=I:IF!VGOTO9
13 W=2:GSB13:FORJ=YTOY+3:L=0:FORI=10TO19:L=L+(SCR(I,J)>0):NEXT:COPY#91F+J*32,#91F+(J-(L=10))*32,-J*32:NEXT:GOTO7
14 Z=USR(#846,W):RTN
99 FORI=0TO6:J=RND(6-I):K=[I]:[I]=[J]:[J]=K:NEXT:RTN




'
1行目は配列[0]〜[6]とブロックパターンをBASE128エンコードしたもの。tetris_data.binから生成
2行目はマシン語描画コード。tetris_test7.cをmakeしたもの
マシン語圧縮コードが2行に渡るため、3〜5のデコード＆書き込み部分は少しトリッキーになっている。
配列[0]〜[6]＆ブロックパターン分の70バイトを書き終えたら（IF D = #846 = #800+70)読み込み元のオフセット#C04を次の行の#C54に移している。
#C54の値はPEEK(#C02)して得られる1行目の文字数82バイトに、行番号2バイト、スペース、コメント記号（'）の4バイト、合わせて86バイトを足したもの。（#C04+86 = #C5A)
マシン語部分の総バイト数は198バイトなので、終了条件は#800+198=#8C6
汎用化するならちゃんとPEEKを書かないといけないが、このプログラムの場合は固定なのでそのまま書き込んだ。
これによって、マシン語の先頭部分もズレるので、USRで呼ぶアドレスは#800ではなく#838になる。



プログラム
1 ブロックパターンのBASE128エンコード文字列
2 コアエンジンのマシン語のBASE128エンコード文字列
3-5　デコード＆メモリ書き込み
6 ゲーム初期化、フィールドの描画
7 新規ブロックの生成とサイクル一周したらシャッフル
8 NEXTブロック
9 ブロックの描画
10 移動入力のチェック：時間経過あるいはカーソル下で下、でなければカーソル左右とスペースで回転。もし入力がなければこのループを無限に繰り返す
11 現在のブロックを消去。移動先の座標を計算して衝突判定。衝突していなければ9に戻って新しい位置にブロックを描画する
12 衝突したため移動は行わないのでX/Y/Rを元の値に戻す。下方向の入力でなければ元の位置にブロックを書き直すために9に戻る。
13 石化ブロックを描画。ライン消しのチェック。Yの位置から下にスキャンしていき、全部埋まっている行は1つ上の行というかVRAMを丸ごとコピーする。新規ブロック7に戻る
14 描画サブルーチン。X,Y,Rの位置に、キャラWを描画する
99 配列シャッフルサブルーチン。[0]~[6]をシャッフルする


変数
A:  現在のブロック排出サイクルのインデックス（%7）
X:  ブロックエリア（4x4）左上のX座標
Y:  ブロックエリア（4x4）左上のY座標
B:  ブロックの種類（0〜7）
R:  現在の回転方向（0〜3）
H:  水平方向移動量
V:  垂直方向移動量
S:  回転ボタンの押し下げ状態
U:  直前の回転ボタンの状態の保護
W:  表示するキャラクターパターン（248:ブロック、0:消去）
T:  1段降下するまでのタイマー値（初期値60=1秒）
Z:  USR関数戻り値
